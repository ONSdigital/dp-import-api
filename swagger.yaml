swagger: "2.0"
info:
  description: |
    An API used to create and query information about import jobs.
  version: "1.0.0"
  title: "ONS Import API"
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
basePath: "/v1"
tags:
- name: "Import API"
schemes:
- "http"
parameters:
  id:
    name: id
    description: "A unique job id"
    type: string
    in: path
    required: true
  job:
    name: job
    in: body
    schema:
      $ref: '#/definitions/Job'
    required: true
  state:
    name: state
    description: "A comma-separated list of job states to filter on. Eg created,submitted"
    type: array
    items:
      type: string
    in: query
  file:
    name: File
    description: "A file to include in the job"
    in: body
    schema:
      $ref: '#/definitions/File'
    required: true
  limit:
    name: limit
    description: "Maximum number of items that will be returned. A value of zero will return zero items. The default value is 20, and the maximum limit allowed is 1000"
    in: query
    required: false
    type: integer
  offset:
    name: offset
    description: "Starting index of the items array that will be returned. By default it is zero, meaning that the returned items will start from the beginning."
    in: query
    required: false
    type: integer
securityDefinitions:
  FlorenceAPIKey:
    description: "API key used to allow florence users to create and query the progress of importing a dataset"
    type: apiKey
    in: header
    name: florence-token
paths:
  /jobs:
    get:
      tags:
      - "Import API"
      summary: "Get a list of all jobs"
      description: "Lists can be filtered by the job state"
      produces:
       - "application/json"
      parameters:
      - $ref: '#/parameters/state'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      security:
      - FlorenceAPIKey: []
      responses:
        200:
          description: "A list of jobs has been returned"
          schema:
            $ref: '#/definitions/JobList'
        500:
          $ref: '#/responses/InternalError'
    post:
      tags:
      - "Import API"
      summary: "Create an import job"
      description: |
        To import a dataset a job must be created first. To do this a data baker recipe is needed and the number of instances which the recipe creates. Once a job is created files can be added to the job and the state of the job can be changed.
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/job'
      security:
      - FlorenceAPIKey: []
      responses:
        201:
          description: "An import job was successfully created"
          schema:
            $ref: '#/definitions/Job'
        400:
          description: "Invalid json message was sent to the API"
        500:
          $ref: '#/responses/InternalError'
  /jobs/{id}:
    get:
        tags:
        - "Import API"
        summary: "Get a job"
        description: "Get information about a single job"
        parameters:
         - $ref: '#/parameters/id'
        produces:
        - "application/json"
        security:
        - FlorenceAPIKey: []
        responses:
          200:
            description: "Return a single jobs information"
            schema:
              $ref: '#/definitions/Job'
          404:
            description: "JobId does not match any import jobs"
          500:
            $ref: '#/responses/InternalError'
    put:
      tags:
      - "Import API"
      summary: "Update the jobs state"
      description: |
        Update the state of the job. If this is set to submitted, this shall trigger the
        import process.
      parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/job'
      produces:
      - "application/json"
      security:
      - FlorenceAPIKey: []
      responses:
        200:
          description: "The job is in a queue"
        400:
          description: "Invalid json message was sent to the API"
        404:
          description: "JobId does not match any import jobs"
        500:
          $ref: '#/responses/InternalError'
  /jobs/{id}/files:
    put:
      tags:
      - "Import API"
      summary: "Add a file into a job"
      description: "Add a file into a job, for each file added an alias name needs to be given. This name needs to link to the recipe"
      parameters:
      - $ref: '#/parameters/id'
      - $ref: '#/parameters/file'
      produces:
      - "application/json"
      security:
      - FlorenceAPIKey: []
      responses:
        200:
          description: "The file was added to the import job"
        400:
          description: "Invalid json message was sent to the API"
        404:
          description: "JobId does not match any import jobs"
        500:
          $ref: '#/responses/InternalError'

responses:
  InternalError:
    description: "Failed to process the request due to an internal error"
  ForbiddenError:
    description: "No header with a token key was provided"
  UnauthorisedError:
    description: "The token provided is unauthorised to carry out this operation"
definitions:
  JobList:
    description: "A list of import jobs"
    type: object
    properties:
      count:
        description: "The number of jobs returned"
        readOnly: true
        type: integer
      items:
        type: array
        items:
          $ref: '#/definitions/Job'
      limit:
        description: "The number of jobs requested"
        type: integer
      offset:
        description: "The first row of jobs to retrieve, starting at 0. Use this parameter as a pagination mechanism along with the limit parameter"
        type: integer
      total_count:
        description: "The total number of jobs"
        readOnly: true
        type: integer
  Job:
    type: object
    description: "An object returned when an import job is created"
    properties:
      id:
        type: string
        readOnly: true
        description: "A unique id for an import job"
      recipe:
        type: string
        description: |
          The recipe to use when baking data. Below is a list of predefined recipes;
          * v4 - This will skip the data baking process.
      state:
        type: string
        description: |
          The state of the job, this can be;
           * created - The job has been created;
           * submitted - The job has been queue to be imported
           * completed - The job has been imported
           * error - The job was not imported (See the events in the instances)
      links:
        type: object
        properties:
          instances:
            type: array
            readOnly: true
            items:
              $ref: '#/definitions/IDLink'
      files:
        description: "A list of all files to be used in the job"
        type: array
        items:
          $ref: '#/definitions/File'
      last_updated:
        type: string
        description: "The time this job was last updated."
        example: "2016-07-17T08:38:25.316+0000"
        format: string
  File:
    type: object
    properties:
      alias_name:
        description: "An alias name for the file"
        type: string
      url:
        description: "The full S3 path including zone, and bucket"
        type: string
  IDLink:
    type: object
    properties:
      id:
        description: "ID for the object"
        type: string
      href:
        description: "The full URL for the object"
        type: string
